##############################################################################
#                                                                            #
#   PROGRAMA PARA LA MANIPULACIÓN DE DATOS REQUERIDOS PARA LA CONSTRUCCIÓN   #
#        DE LAS ESTADÍSTICAS DE ESTUDIANTES MATRICULADOS EN PREGRADO         #
#                                                                            #
##############################################################################
options(digits = 10)
# Paquetes y versiones requeridas
library(tidyverse) # version 1.2.1
library(readxl)    # version 1.0.0
# Definir tipo de las variables a importar
tipovar <- c("text", "text", "numeric", "numeric", "text", "text", "text", "numeric",
"text", "numeric", "text", "text", "text", "numeric", "text", "numeric",
"text", "text", "text", "numeric", "text", "numeric", "text", "text",
"text", "text", "text", "numeric", "text", "text", "text", "text", "numeric",
"text", "numeric", "text", "text", "text", "text", "text", "text", "text",
"text", "text", "numeric", "text", "text", "text", "numeric", "text", "text",
"text", "numeric", "numeric", "text")
# Función para importar microdatos desde Excel
importar <- function(year, periodo){
read_excel(paste0("Microdatos/",year,".xlsx"),
sheet = periodo, guess_max = 100000,  col_types = tipovar)
}
# Importar bases de datos por año y periodo
M2009 <- importar("P2009 Matrícula", "2009 Matrícula")
M2010 <- importar("P2010 Matrícula", "2010 Matrícula")
M2011 <- importar("P2011 Matrícula", "2011 Matrícula")
M2012 <- importar("P2012 Matrícula", "2012 Matrícula")
M2013 <- importar("P2013 Matrícula", "2013 Matrícula")
M2014 <- importar("P2014 Matrícula", "2014 Matrícula")
M2015 <- importar("P2015 Matrícula", "2015 Matrícula")
M2016 <- importar("P2016 Matrícula", "2016 Matrícula")
M2017 <- importar("P2017 Matrícula", "2017 Matrícula")
M20181 <- importar("P20181 Matrícula", "20181 Matrícula")
# CAMBIAR LAS VARIABLES CON NÚMEROS ALMACENADOS COMO TEXTO (LONGITUD - LATITUD)
M2009$LON_CIU_NAC	<- as.numeric(str_replace(M2009$LON_CIU_NAC, ",", "."))
M2009$LAT_CIU_NAC <- as.numeric(str_replace(M2009$LAT_CIU_NAC, ",", "."))
M2009$LON_CIU_PROC <- as.numeric(str_replace(M2009$LON_CIU_PROC, ",", "."))
M2009$LAT_CIU_PROC <- as.numeric(str_replace(M2009$LAT_CIU_PROC, ",", "."))
M2010$LON_CIU_NAC	<- as.numeric(str_replace(M2010$LON_CIU_NAC, ",", "."))
M2010$LAT_CIU_NAC <- as.numeric(str_replace(M2010$LAT_CIU_NAC, ",", "."))
M2010$LON_CIU_PROC <- as.numeric(str_replace(M2010$LON_CIU_PROC, ",", "."))
M2010$LAT_CIU_PROC <- as.numeric(str_replace(M2010$LAT_CIU_PROC, ",", "."))
M2011$LON_CIU_NAC	<- as.numeric(str_replace(M2011$LON_CIU_NAC, ",", "."))
M2011$LAT_CIU_NAC <- as.numeric(str_replace(M2011$LAT_CIU_NAC, ",", "."))
M2011$LON_CIU_PROC <- as.numeric(str_replace(M2011$LON_CIU_PROC, ",", "."))
M2011$LAT_CIU_PROC <- as.numeric(str_replace(M2011$LAT_CIU_PROC, ",", "."))
M2012$LON_CIU_NAC	<- as.numeric(str_replace(M2012$LON_CIU_NAC, ",", "."))
M2012$LAT_CIU_NAC <- as.numeric(str_replace(M2012$LAT_CIU_NAC, ",", "."))
M2012$LON_CIU_PROC <- as.numeric(str_replace(M2012$LON_CIU_PROC, ",", "."))
M2012$LAT_CIU_PROC <- as.numeric(str_replace(M2012$LAT_CIU_PROC, ",", "."))
M2013$LON_CIU_NAC	<- as.numeric(str_replace(M2013$LON_CIU_NAC, ",", "."))
M2013$LAT_CIU_NAC <- as.numeric(str_replace(M2013$LAT_CIU_NAC, ",", "."))
M2013$LON_CIU_PROC <- as.numeric(str_replace(M2013$LON_CIU_PROC, ",", "."))
M2013$LAT_CIU_PROC <- as.numeric(str_replace(M2013$LAT_CIU_PROC, ",", "."))
M2014$LON_CIU_NAC	<- as.numeric(str_replace(M2014$LON_CIU_NAC, ",", "."))
M2014$LAT_CIU_NAC <- as.numeric(str_replace(M2014$LAT_CIU_NAC, ",", "."))
M2014$LON_CIU_PROC <- as.numeric(str_replace(M2014$LON_CIU_PROC, ",", "."))
M2014$LAT_CIU_PROC <- as.numeric(str_replace(M2014$LAT_CIU_PROC, ",", "."))
M2015$LON_CIU_NAC	<- as.numeric(str_replace(M2015$LON_CIU_NAC, ",", "."))
M2015$LAT_CIU_NAC <- as.numeric(str_replace(M2015$LAT_CIU_NAC, ",", "."))
M2015$LON_CIU_PROC <- as.numeric(str_replace(M2015$LON_CIU_PROC, ",", "."))
M2015$LAT_CIU_PROC <- as.numeric(str_replace(M2015$LAT_CIU_PROC, ",", "."))
M2016$LON_CIU_NAC	<- as.numeric(str_replace(M2016$LON_CIU_NAC, ",", "."))
M2016$LAT_CIU_NAC <- as.numeric(str_replace(M2016$LAT_CIU_NAC, ",", "."))
M2016$LON_CIU_PROC <- as.numeric(str_replace(M2016$LON_CIU_PROC, ",", "."))
M2016$LAT_CIU_PROC <- as.numeric(str_replace(M2016$LAT_CIU_PROC, ",", "."))
M2017$LON_CIU_NAC	<- as.numeric(str_replace(M2017$LON_CIU_NAC, ",", "."))
M2017$LAT_CIU_NAC <- as.numeric(str_replace(M2017$LAT_CIU_NAC, ",", "."))
M2017$LON_CIU_PROC <- as.numeric(str_replace(M2017$LON_CIU_PROC, ",", "."))
M2017$LAT_CIU_PROC <- as.numeric(str_replace(M2017$LAT_CIU_PROC, ",", "."))
M20181$LON_CIU_NAC	<- as.numeric(str_replace(M20181$LON_CIU_NAC, ",", "."))
M20181$LAT_CIU_NAC <- as.numeric(str_replace(M20181$LAT_CIU_NAC, ",", "."))
M20181$LON_CIU_PROC <- as.numeric(str_replace(M20181$LON_CIU_PROC, ",", "."))
M20181$LAT_CIU_PROC <- as.numeric(str_replace(M20181$LAT_CIU_PROC, ",", "."))
# Pegar las bases de datos importadas por abajo
Microdatos <- bind_rows(M2009, M2010, M2011, M2012, M2013, M2014, M2015, M2016, M2017, M20181)
# Seleccionar Matriculados Primera Vez
Microdatos <- Microdatos %>% filter(MAT_PVEZ == "Sí")
options(digits = 10)
library(tidyverse) # version 1.2.1
library(readxl)    # version 1.0.0
tipovar <- c("text", "text", "numeric", "numeric", "text", "text", "text", "numeric",
"text", "numeric", "text", "text", "text", "numeric", "text", "numeric",
"text", "text", "text", "numeric", "text", "numeric", "text", "text",
"text", "text", "text", "numeric", "text", "text", "text", "text", "numeric",
"text", "numeric", "text", "text", "text", "text", "text", "text", "text",
"text", "text", "numeric", "text", "text", "text", "numeric", "text", "text",
"text", "numeric", "numeric", "text")
importar <- function(year, periodo){
read_excel(paste0("Microdatos/",year,".xlsx"),
sheet = periodo, guess_max = 100000,  col_types = tipovar)
}
M2009 <- importar("P2009 Matrícula", "2009 Matrícula")
library(rgdal)        # Versión 1.2-8
library(leaflet)      # Versión 1.1.0
library(htmlwidgets)  # Versión 1.0
library(tidyverse)    # Versión 1.2.1
library(rjson)        # Versión 0.2.15
library(readxl)       # Versión 1.0.0
library(viridis)      # Versión 0.4.0
library(extrafont)    # Versión 0.17
divipola.R <- read.table("Estandares/DIVIPOLA_20160930.csv", sep=";", header=T)
cabeceras <- divipola.R %>% select(code_dept=Código.Departamento,
code_mun=Código.Municipio,
departamentos=Nombre.Departamento,
municipios=Nombre.Municipio,
tipo_centro=Tipo.Centro.Poblado,
longitud=Longitud,
latitud=Latitud) %>%
filter(tipo_centro == "CABECERA MUNICIPAL (CM)")
divipola.R <- read.table("Estandares/DIVIPOLA_20160930.csv", sep=";", header=T)
